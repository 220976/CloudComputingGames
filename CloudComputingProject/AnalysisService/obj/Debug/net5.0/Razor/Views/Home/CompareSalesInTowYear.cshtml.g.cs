#pragma checksum "D:\Users\Lenovo\Document\Visual Dtudio 2019\Project\CloudComputingProject\CloudComputingProject\AnalysisService\Views\Home\CompareSalesInTowYear.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "74518e4d05d36ac5b0557fdef2130878b85fdcb9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_CompareSalesInTowYear), @"mvc.1.0.view", @"/Views/Home/CompareSalesInTowYear.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "D:\Users\Lenovo\Document\Visual Dtudio 2019\Project\CloudComputingProject\CloudComputingProject\AnalysisService\Views\Home\CompareSalesInTowYear.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"74518e4d05d36ac5b0557fdef2130878b85fdcb9", @"/Views/Home/CompareSalesInTowYear.cshtml")]
    public class Views_Home_CompareSalesInTowYear : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<AnalysisService.Models.vmCompareSalesInTowYear>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<script>\r\n    am4core.ready(function () {\r\n        let chart = am4core.createFromConfig({\r\n                \'type\': \'XYChart3D\',\r\n            \'data\': ");
#nullable restore
#line 7 "D:\Users\Lenovo\Document\Visual Dtudio 2019\Project\CloudComputingProject\CloudComputingProject\AnalysisService\Views\Home\CompareSalesInTowYear.cshtml"
               Write(Html.Raw(JsonConvert.SerializeObject(Model)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
                'xAxes': [{
                        'type': 'CategoryAxis',
                    'dataFields': {
                            'category': 'Year'
                    },
                    'renderer': {
                            'grid': {
                                'template': {
                                    'type': 'Grid',
                                'location': 0
                                }
                        },
                        ""labels"": {
                            ""template"": {
                                ""type"": ""AxisLabel"",
                                ""rotation"": -45
                            }
                        },
                        'minGridDistance': 20
                    }
                    }],
                'yAxes': [{
                        'type': 'ValueAxis',
                    'min': 0,
                    'renderer': {
                            'maxLabelPosition': 0.98
                  ");
            WriteLiteral(@"  }
                    }],
                'series': [{
                    'type': 'ColumnSeries3D',
                    'name': 'Year',
                    'columns': {
                            'template': {
                                'type': 'Column3D',
                            'strokeOpacity': 0,
                            'tooltipText': '{categoryX}\n{valueY}',
                            'tooltipPosition': 'pointer'
                            }
                        },
                    'dataFields': {
                            'valueY': 'Sales',
                        'categoryX': 'Year'
                    },
                    'sequencedInterpolation': true,
                    'sequencedInterpolationDelay': 100
                }],
            'legend': {
                'type': 'Legend',
                'position': 'right'
            }
            },
            document.getElementById('chartdiv')
        );
    });
</script>
<div id='chartdiv' sty");
            WriteLiteral("le=\'width:100%; height:500px;margin-top:150px\'></div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<AnalysisService.Models.vmCompareSalesInTowYear>> Html { get; private set; }
    }
}
#pragma warning restore 1591
